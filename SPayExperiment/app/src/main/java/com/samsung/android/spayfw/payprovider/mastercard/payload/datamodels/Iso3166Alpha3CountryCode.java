/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  java.lang.Enum
 *  java.lang.Object
 *  java.lang.String
 *  java.util.HashMap
 *  java.util.Map
 */
package com.samsung.android.spayfw.payprovider.mastercard.payload.datamodels;

import java.util.HashMap;
import java.util.Map;

public final class Iso3166Alpha3CountryCode
extends Enum<Iso3166Alpha3CountryCode> {
    private static final /* synthetic */ Iso3166Alpha3CountryCode[] $VALUES;
    public static final /* enum */ Iso3166Alpha3CountryCode ABW;
    public static final /* enum */ Iso3166Alpha3CountryCode AFG;
    public static final /* enum */ Iso3166Alpha3CountryCode AGO;
    public static final /* enum */ Iso3166Alpha3CountryCode AIA;
    public static final /* enum */ Iso3166Alpha3CountryCode ALA;
    public static final /* enum */ Iso3166Alpha3CountryCode ALB;
    public static final /* enum */ Iso3166Alpha3CountryCode AND;
    public static final /* enum */ Iso3166Alpha3CountryCode ARE;
    public static final /* enum */ Iso3166Alpha3CountryCode ARG;
    public static final /* enum */ Iso3166Alpha3CountryCode ARM;
    public static final /* enum */ Iso3166Alpha3CountryCode ASM;
    public static final /* enum */ Iso3166Alpha3CountryCode ATA;
    public static final /* enum */ Iso3166Alpha3CountryCode ATF;
    public static final /* enum */ Iso3166Alpha3CountryCode ATG;
    public static final /* enum */ Iso3166Alpha3CountryCode AUS;
    public static final /* enum */ Iso3166Alpha3CountryCode AUT;
    public static final /* enum */ Iso3166Alpha3CountryCode AZE;
    public static final /* enum */ Iso3166Alpha3CountryCode BDI;
    public static final /* enum */ Iso3166Alpha3CountryCode BEL;
    public static final /* enum */ Iso3166Alpha3CountryCode BEN;
    public static final /* enum */ Iso3166Alpha3CountryCode BES;
    public static final /* enum */ Iso3166Alpha3CountryCode BFA;
    public static final /* enum */ Iso3166Alpha3CountryCode BGD;
    public static final /* enum */ Iso3166Alpha3CountryCode BGR;
    public static final /* enum */ Iso3166Alpha3CountryCode BHR;
    public static final /* enum */ Iso3166Alpha3CountryCode BHS;
    public static final /* enum */ Iso3166Alpha3CountryCode BIH;
    public static final /* enum */ Iso3166Alpha3CountryCode BLM;
    public static final /* enum */ Iso3166Alpha3CountryCode BLR;
    public static final /* enum */ Iso3166Alpha3CountryCode BLZ;
    public static final /* enum */ Iso3166Alpha3CountryCode BMU;
    public static final /* enum */ Iso3166Alpha3CountryCode BOL;
    public static final /* enum */ Iso3166Alpha3CountryCode BRA;
    public static final /* enum */ Iso3166Alpha3CountryCode BRB;
    public static final /* enum */ Iso3166Alpha3CountryCode BRN;
    public static final /* enum */ Iso3166Alpha3CountryCode BTN;
    public static final /* enum */ Iso3166Alpha3CountryCode BVT;
    public static final /* enum */ Iso3166Alpha3CountryCode BWA;
    public static final /* enum */ Iso3166Alpha3CountryCode CAF;
    public static final /* enum */ Iso3166Alpha3CountryCode CAN;
    public static final /* enum */ Iso3166Alpha3CountryCode CCK;
    public static final /* enum */ Iso3166Alpha3CountryCode CHE;
    public static final /* enum */ Iso3166Alpha3CountryCode CHL;
    public static final /* enum */ Iso3166Alpha3CountryCode CHN;
    public static final /* enum */ Iso3166Alpha3CountryCode CIV;
    public static final /* enum */ Iso3166Alpha3CountryCode CMR;
    public static final /* enum */ Iso3166Alpha3CountryCode COD;
    public static final /* enum */ Iso3166Alpha3CountryCode COG;
    public static final /* enum */ Iso3166Alpha3CountryCode COK;
    public static final /* enum */ Iso3166Alpha3CountryCode COL;
    public static final /* enum */ Iso3166Alpha3CountryCode COM;
    public static final /* enum */ Iso3166Alpha3CountryCode CPV;
    public static final /* enum */ Iso3166Alpha3CountryCode CRI;
    public static final /* enum */ Iso3166Alpha3CountryCode CUB;
    public static final /* enum */ Iso3166Alpha3CountryCode CUW;
    public static final /* enum */ Iso3166Alpha3CountryCode CXR;
    public static final /* enum */ Iso3166Alpha3CountryCode CYM;
    public static final /* enum */ Iso3166Alpha3CountryCode CYP;
    public static final /* enum */ Iso3166Alpha3CountryCode CZE;
    public static final /* enum */ Iso3166Alpha3CountryCode DEU;
    public static final /* enum */ Iso3166Alpha3CountryCode DJI;
    public static final /* enum */ Iso3166Alpha3CountryCode DMA;
    public static final /* enum */ Iso3166Alpha3CountryCode DNK;
    public static final /* enum */ Iso3166Alpha3CountryCode DOM;
    public static final /* enum */ Iso3166Alpha3CountryCode DZA;
    public static final /* enum */ Iso3166Alpha3CountryCode ECU;
    public static final /* enum */ Iso3166Alpha3CountryCode EGY;
    public static final /* enum */ Iso3166Alpha3CountryCode ERI;
    public static final /* enum */ Iso3166Alpha3CountryCode ESH;
    public static final /* enum */ Iso3166Alpha3CountryCode ESP;
    public static final /* enum */ Iso3166Alpha3CountryCode EST;
    public static final /* enum */ Iso3166Alpha3CountryCode ETH;
    public static final /* enum */ Iso3166Alpha3CountryCode FIN;
    public static final /* enum */ Iso3166Alpha3CountryCode FJI;
    public static final /* enum */ Iso3166Alpha3CountryCode FLK;
    public static final /* enum */ Iso3166Alpha3CountryCode FRA;
    public static final /* enum */ Iso3166Alpha3CountryCode FRO;
    public static final /* enum */ Iso3166Alpha3CountryCode FSM;
    public static final /* enum */ Iso3166Alpha3CountryCode GAB;
    public static final /* enum */ Iso3166Alpha3CountryCode GBR;
    public static final /* enum */ Iso3166Alpha3CountryCode GEO;
    public static final /* enum */ Iso3166Alpha3CountryCode GGY;
    public static final /* enum */ Iso3166Alpha3CountryCode GHA;
    public static final /* enum */ Iso3166Alpha3CountryCode GIB;
    public static final /* enum */ Iso3166Alpha3CountryCode GIN;
    public static final /* enum */ Iso3166Alpha3CountryCode GLP;
    public static final /* enum */ Iso3166Alpha3CountryCode GMB;
    public static final /* enum */ Iso3166Alpha3CountryCode GNB;
    public static final /* enum */ Iso3166Alpha3CountryCode GNQ;
    public static final /* enum */ Iso3166Alpha3CountryCode GRC;
    public static final /* enum */ Iso3166Alpha3CountryCode GRD;
    public static final /* enum */ Iso3166Alpha3CountryCode GRL;
    public static final /* enum */ Iso3166Alpha3CountryCode GTM;
    public static final /* enum */ Iso3166Alpha3CountryCode GUF;
    public static final /* enum */ Iso3166Alpha3CountryCode GUM;
    public static final /* enum */ Iso3166Alpha3CountryCode GUY;
    public static final /* enum */ Iso3166Alpha3CountryCode HKG;
    public static final /* enum */ Iso3166Alpha3CountryCode HMD;
    public static final /* enum */ Iso3166Alpha3CountryCode HND;
    public static final /* enum */ Iso3166Alpha3CountryCode HRV;
    public static final /* enum */ Iso3166Alpha3CountryCode HTI;
    public static final /* enum */ Iso3166Alpha3CountryCode HUN;
    public static final /* enum */ Iso3166Alpha3CountryCode IDN;
    public static final /* enum */ Iso3166Alpha3CountryCode IMN;
    public static final /* enum */ Iso3166Alpha3CountryCode IND;
    public static final /* enum */ Iso3166Alpha3CountryCode IOT;
    public static final /* enum */ Iso3166Alpha3CountryCode IRL;
    public static final /* enum */ Iso3166Alpha3CountryCode IRN;
    public static final /* enum */ Iso3166Alpha3CountryCode IRQ;
    public static final /* enum */ Iso3166Alpha3CountryCode ISL;
    public static final /* enum */ Iso3166Alpha3CountryCode ISR;
    public static final /* enum */ Iso3166Alpha3CountryCode ITA;
    public static final /* enum */ Iso3166Alpha3CountryCode JAM;
    public static final /* enum */ Iso3166Alpha3CountryCode JEY;
    public static final /* enum */ Iso3166Alpha3CountryCode JOR;
    public static final /* enum */ Iso3166Alpha3CountryCode JPN;
    public static final /* enum */ Iso3166Alpha3CountryCode KAZ;
    public static final /* enum */ Iso3166Alpha3CountryCode KEN;
    public static final /* enum */ Iso3166Alpha3CountryCode KGZ;
    public static final /* enum */ Iso3166Alpha3CountryCode KHM;
    public static final /* enum */ Iso3166Alpha3CountryCode KIR;
    public static final /* enum */ Iso3166Alpha3CountryCode KNA;
    public static final /* enum */ Iso3166Alpha3CountryCode KOR;
    public static final /* enum */ Iso3166Alpha3CountryCode KWT;
    public static final /* enum */ Iso3166Alpha3CountryCode LAO;
    public static final /* enum */ Iso3166Alpha3CountryCode LBN;
    public static final /* enum */ Iso3166Alpha3CountryCode LBR;
    public static final /* enum */ Iso3166Alpha3CountryCode LBY;
    public static final /* enum */ Iso3166Alpha3CountryCode LCA;
    public static final /* enum */ Iso3166Alpha3CountryCode LIE;
    public static final /* enum */ Iso3166Alpha3CountryCode LKA;
    public static final /* enum */ Iso3166Alpha3CountryCode LSO;
    public static final /* enum */ Iso3166Alpha3CountryCode LTU;
    public static final /* enum */ Iso3166Alpha3CountryCode LUX;
    public static final /* enum */ Iso3166Alpha3CountryCode LVA;
    public static final /* enum */ Iso3166Alpha3CountryCode MAC;
    public static final /* enum */ Iso3166Alpha3CountryCode MAF;
    public static final /* enum */ Iso3166Alpha3CountryCode MAR;
    public static final /* enum */ Iso3166Alpha3CountryCode MCO;
    public static final /* enum */ Iso3166Alpha3CountryCode MDA;
    public static final /* enum */ Iso3166Alpha3CountryCode MDG;
    public static final /* enum */ Iso3166Alpha3CountryCode MDV;
    public static final /* enum */ Iso3166Alpha3CountryCode MEX;
    public static final /* enum */ Iso3166Alpha3CountryCode MHL;
    public static final /* enum */ Iso3166Alpha3CountryCode MKD;
    public static final /* enum */ Iso3166Alpha3CountryCode MLI;
    public static final /* enum */ Iso3166Alpha3CountryCode MLT;
    public static final /* enum */ Iso3166Alpha3CountryCode MMR;
    public static final /* enum */ Iso3166Alpha3CountryCode MNE;
    public static final /* enum */ Iso3166Alpha3CountryCode MNG;
    public static final /* enum */ Iso3166Alpha3CountryCode MNP;
    public static final /* enum */ Iso3166Alpha3CountryCode MOZ;
    public static final /* enum */ Iso3166Alpha3CountryCode MRT;
    public static final /* enum */ Iso3166Alpha3CountryCode MSR;
    public static final /* enum */ Iso3166Alpha3CountryCode MTQ;
    public static final /* enum */ Iso3166Alpha3CountryCode MUS;
    public static final /* enum */ Iso3166Alpha3CountryCode MWI;
    public static final /* enum */ Iso3166Alpha3CountryCode MYS;
    public static final /* enum */ Iso3166Alpha3CountryCode MYT;
    public static final /* enum */ Iso3166Alpha3CountryCode NAM;
    public static final /* enum */ Iso3166Alpha3CountryCode NCL;
    public static final /* enum */ Iso3166Alpha3CountryCode NER;
    public static final /* enum */ Iso3166Alpha3CountryCode NFK;
    public static final /* enum */ Iso3166Alpha3CountryCode NGA;
    public static final /* enum */ Iso3166Alpha3CountryCode NIC;
    public static final /* enum */ Iso3166Alpha3CountryCode NIU;
    public static final /* enum */ Iso3166Alpha3CountryCode NLD;
    public static final /* enum */ Iso3166Alpha3CountryCode NOR;
    public static final /* enum */ Iso3166Alpha3CountryCode NPL;
    public static final /* enum */ Iso3166Alpha3CountryCode NRU;
    public static final /* enum */ Iso3166Alpha3CountryCode NZL;
    public static final /* enum */ Iso3166Alpha3CountryCode OMN;
    public static final /* enum */ Iso3166Alpha3CountryCode PAK;
    public static final /* enum */ Iso3166Alpha3CountryCode PAN;
    public static final /* enum */ Iso3166Alpha3CountryCode PCN;
    public static final /* enum */ Iso3166Alpha3CountryCode PER;
    public static final /* enum */ Iso3166Alpha3CountryCode PHL;
    public static final /* enum */ Iso3166Alpha3CountryCode PLW;
    public static final /* enum */ Iso3166Alpha3CountryCode PNG;
    public static final /* enum */ Iso3166Alpha3CountryCode POL;
    public static final /* enum */ Iso3166Alpha3CountryCode PRI;
    public static final /* enum */ Iso3166Alpha3CountryCode PRK;
    public static final /* enum */ Iso3166Alpha3CountryCode PRT;
    public static final /* enum */ Iso3166Alpha3CountryCode PRY;
    public static final /* enum */ Iso3166Alpha3CountryCode PSE;
    public static final /* enum */ Iso3166Alpha3CountryCode PYF;
    public static final /* enum */ Iso3166Alpha3CountryCode QAT;
    public static final /* enum */ Iso3166Alpha3CountryCode REU;
    public static final /* enum */ Iso3166Alpha3CountryCode ROU;
    public static final /* enum */ Iso3166Alpha3CountryCode RUS;
    public static final /* enum */ Iso3166Alpha3CountryCode RWA;
    public static final /* enum */ Iso3166Alpha3CountryCode SAU;
    public static final /* enum */ Iso3166Alpha3CountryCode SDN;
    public static final /* enum */ Iso3166Alpha3CountryCode SEN;
    public static final /* enum */ Iso3166Alpha3CountryCode SGP;
    public static final /* enum */ Iso3166Alpha3CountryCode SGS;
    public static final /* enum */ Iso3166Alpha3CountryCode SHN;
    public static final /* enum */ Iso3166Alpha3CountryCode SJM;
    public static final /* enum */ Iso3166Alpha3CountryCode SLB;
    public static final /* enum */ Iso3166Alpha3CountryCode SLE;
    public static final /* enum */ Iso3166Alpha3CountryCode SLV;
    public static final /* enum */ Iso3166Alpha3CountryCode SMR;
    public static final /* enum */ Iso3166Alpha3CountryCode SOM;
    public static final /* enum */ Iso3166Alpha3CountryCode SPM;
    public static final /* enum */ Iso3166Alpha3CountryCode SRB;
    public static final /* enum */ Iso3166Alpha3CountryCode SSD;
    public static final /* enum */ Iso3166Alpha3CountryCode STP;
    public static final /* enum */ Iso3166Alpha3CountryCode SUR;
    public static final /* enum */ Iso3166Alpha3CountryCode SVK;
    public static final /* enum */ Iso3166Alpha3CountryCode SVN;
    public static final /* enum */ Iso3166Alpha3CountryCode SWE;
    public static final /* enum */ Iso3166Alpha3CountryCode SWZ;
    public static final /* enum */ Iso3166Alpha3CountryCode SXM;
    public static final /* enum */ Iso3166Alpha3CountryCode SYC;
    public static final /* enum */ Iso3166Alpha3CountryCode SYR;
    public static final /* enum */ Iso3166Alpha3CountryCode TCA;
    public static final /* enum */ Iso3166Alpha3CountryCode TCD;
    public static final /* enum */ Iso3166Alpha3CountryCode TGO;
    public static final /* enum */ Iso3166Alpha3CountryCode THA;
    public static final /* enum */ Iso3166Alpha3CountryCode TJK;
    public static final /* enum */ Iso3166Alpha3CountryCode TKL;
    public static final /* enum */ Iso3166Alpha3CountryCode TKM;
    public static final /* enum */ Iso3166Alpha3CountryCode TLS;
    public static final /* enum */ Iso3166Alpha3CountryCode TON;
    public static final /* enum */ Iso3166Alpha3CountryCode TTO;
    public static final /* enum */ Iso3166Alpha3CountryCode TUN;
    public static final /* enum */ Iso3166Alpha3CountryCode TUR;
    public static final /* enum */ Iso3166Alpha3CountryCode TUV;
    public static final /* enum */ Iso3166Alpha3CountryCode TWN;
    public static final /* enum */ Iso3166Alpha3CountryCode TZA;
    public static final /* enum */ Iso3166Alpha3CountryCode UGA;
    public static final /* enum */ Iso3166Alpha3CountryCode UKR;
    public static final /* enum */ Iso3166Alpha3CountryCode UMI;
    public static final /* enum */ Iso3166Alpha3CountryCode URY;
    public static final /* enum */ Iso3166Alpha3CountryCode USA;
    public static final /* enum */ Iso3166Alpha3CountryCode UZB;
    public static final /* enum */ Iso3166Alpha3CountryCode VAT;
    public static final /* enum */ Iso3166Alpha3CountryCode VCT;
    public static final /* enum */ Iso3166Alpha3CountryCode VEN;
    public static final /* enum */ Iso3166Alpha3CountryCode VGB;
    public static final /* enum */ Iso3166Alpha3CountryCode VIR;
    public static final /* enum */ Iso3166Alpha3CountryCode VNM;
    public static final /* enum */ Iso3166Alpha3CountryCode VUT;
    public static final /* enum */ Iso3166Alpha3CountryCode WLF;
    public static final /* enum */ Iso3166Alpha3CountryCode WSM;
    public static final /* enum */ Iso3166Alpha3CountryCode YEM;
    public static final /* enum */ Iso3166Alpha3CountryCode ZAF;
    public static final /* enum */ Iso3166Alpha3CountryCode ZMB;
    public static final /* enum */ Iso3166Alpha3CountryCode ZWE;
    static Map<String, Iso3166Alpha3CountryCode> mIso3166ConverterMap;
    private String alpha2;

    static {
        AFG = new Iso3166Alpha3CountryCode("AF");
        ALA = new Iso3166Alpha3CountryCode("AX");
        ALB = new Iso3166Alpha3CountryCode("AL");
        DZA = new Iso3166Alpha3CountryCode("DZ");
        ASM = new Iso3166Alpha3CountryCode("AS");
        AND = new Iso3166Alpha3CountryCode("AD");
        AGO = new Iso3166Alpha3CountryCode("AO");
        AIA = new Iso3166Alpha3CountryCode("AI");
        ATA = new Iso3166Alpha3CountryCode("AQ");
        ATG = new Iso3166Alpha3CountryCode("AG");
        ARG = new Iso3166Alpha3CountryCode("AR");
        ARM = new Iso3166Alpha3CountryCode("AM");
        ABW = new Iso3166Alpha3CountryCode("AW");
        AUS = new Iso3166Alpha3CountryCode("AU");
        AUT = new Iso3166Alpha3CountryCode("AT");
        AZE = new Iso3166Alpha3CountryCode("AZ");
        BHS = new Iso3166Alpha3CountryCode("BS");
        BHR = new Iso3166Alpha3CountryCode("BH");
        BGD = new Iso3166Alpha3CountryCode("BD");
        BRB = new Iso3166Alpha3CountryCode("BB");
        BLR = new Iso3166Alpha3CountryCode("BY");
        BEL = new Iso3166Alpha3CountryCode("BE");
        BLZ = new Iso3166Alpha3CountryCode("BZ");
        BEN = new Iso3166Alpha3CountryCode("BJ");
        BMU = new Iso3166Alpha3CountryCode("BM");
        BTN = new Iso3166Alpha3CountryCode("BT");
        BOL = new Iso3166Alpha3CountryCode("BO");
        BES = new Iso3166Alpha3CountryCode("BQ");
        BIH = new Iso3166Alpha3CountryCode("BA");
        BWA = new Iso3166Alpha3CountryCode("BW");
        BVT = new Iso3166Alpha3CountryCode("BV");
        BRA = new Iso3166Alpha3CountryCode("BR");
        IOT = new Iso3166Alpha3CountryCode("IO");
        BRN = new Iso3166Alpha3CountryCode("BN");
        BGR = new Iso3166Alpha3CountryCode("BG");
        BFA = new Iso3166Alpha3CountryCode("BF");
        BDI = new Iso3166Alpha3CountryCode("BI");
        KHM = new Iso3166Alpha3CountryCode("KH");
        CMR = new Iso3166Alpha3CountryCode("CM");
        CAN = new Iso3166Alpha3CountryCode("CA");
        CPV = new Iso3166Alpha3CountryCode("CV");
        CYM = new Iso3166Alpha3CountryCode("KY");
        CAF = new Iso3166Alpha3CountryCode("CF");
        TCD = new Iso3166Alpha3CountryCode("TD");
        CHL = new Iso3166Alpha3CountryCode("CL");
        CHN = new Iso3166Alpha3CountryCode("CN");
        CXR = new Iso3166Alpha3CountryCode("CX");
        CCK = new Iso3166Alpha3CountryCode("CC");
        COL = new Iso3166Alpha3CountryCode("CO");
        COM = new Iso3166Alpha3CountryCode("KM");
        COG = new Iso3166Alpha3CountryCode("CG");
        COD = new Iso3166Alpha3CountryCode("CD");
        COK = new Iso3166Alpha3CountryCode("CK");
        CRI = new Iso3166Alpha3CountryCode("CR");
        CIV = new Iso3166Alpha3CountryCode("CI");
        HRV = new Iso3166Alpha3CountryCode("HR");
        CUB = new Iso3166Alpha3CountryCode("CU");
        CUW = new Iso3166Alpha3CountryCode("CW");
        CYP = new Iso3166Alpha3CountryCode("CY");
        CZE = new Iso3166Alpha3CountryCode("CZ");
        DNK = new Iso3166Alpha3CountryCode("DK");
        DJI = new Iso3166Alpha3CountryCode("DJ");
        DMA = new Iso3166Alpha3CountryCode("DM");
        DOM = new Iso3166Alpha3CountryCode("DO");
        ECU = new Iso3166Alpha3CountryCode("EC");
        EGY = new Iso3166Alpha3CountryCode("EG");
        SLV = new Iso3166Alpha3CountryCode("SV");
        GNQ = new Iso3166Alpha3CountryCode("GQ");
        ERI = new Iso3166Alpha3CountryCode("ER");
        EST = new Iso3166Alpha3CountryCode("EE");
        ETH = new Iso3166Alpha3CountryCode("ET");
        FLK = new Iso3166Alpha3CountryCode("FK");
        FRO = new Iso3166Alpha3CountryCode("FO");
        FJI = new Iso3166Alpha3CountryCode("FJ");
        FIN = new Iso3166Alpha3CountryCode("FI");
        FRA = new Iso3166Alpha3CountryCode("FR");
        GUF = new Iso3166Alpha3CountryCode("GF");
        PYF = new Iso3166Alpha3CountryCode("PF");
        ATF = new Iso3166Alpha3CountryCode("TF");
        GAB = new Iso3166Alpha3CountryCode("GA");
        GMB = new Iso3166Alpha3CountryCode("GM");
        GEO = new Iso3166Alpha3CountryCode("GE");
        DEU = new Iso3166Alpha3CountryCode("DE");
        GHA = new Iso3166Alpha3CountryCode("GH");
        GIB = new Iso3166Alpha3CountryCode("GI");
        GRC = new Iso3166Alpha3CountryCode("GR");
        GRL = new Iso3166Alpha3CountryCode("GL");
        GRD = new Iso3166Alpha3CountryCode("GD");
        GLP = new Iso3166Alpha3CountryCode("GP");
        GUM = new Iso3166Alpha3CountryCode("GU");
        GTM = new Iso3166Alpha3CountryCode("GT");
        GGY = new Iso3166Alpha3CountryCode("GG");
        GIN = new Iso3166Alpha3CountryCode("GN");
        GNB = new Iso3166Alpha3CountryCode("GW");
        GUY = new Iso3166Alpha3CountryCode("GY");
        HTI = new Iso3166Alpha3CountryCode("HT");
        HMD = new Iso3166Alpha3CountryCode("HM");
        VAT = new Iso3166Alpha3CountryCode("VA");
        HND = new Iso3166Alpha3CountryCode("HN");
        HKG = new Iso3166Alpha3CountryCode("HK");
        HUN = new Iso3166Alpha3CountryCode("HU");
        ISL = new Iso3166Alpha3CountryCode("IS");
        IND = new Iso3166Alpha3CountryCode("IN");
        IDN = new Iso3166Alpha3CountryCode("ID");
        IRN = new Iso3166Alpha3CountryCode("IR");
        IRQ = new Iso3166Alpha3CountryCode("IQ");
        IRL = new Iso3166Alpha3CountryCode("IE");
        IMN = new Iso3166Alpha3CountryCode("IM");
        ISR = new Iso3166Alpha3CountryCode("IL");
        ITA = new Iso3166Alpha3CountryCode("IT");
        JAM = new Iso3166Alpha3CountryCode("JM");
        JPN = new Iso3166Alpha3CountryCode("JP");
        JEY = new Iso3166Alpha3CountryCode("JE");
        JOR = new Iso3166Alpha3CountryCode("JO");
        KAZ = new Iso3166Alpha3CountryCode("KZ");
        KEN = new Iso3166Alpha3CountryCode("KE");
        KIR = new Iso3166Alpha3CountryCode("KI");
        PRK = new Iso3166Alpha3CountryCode("KP");
        KOR = new Iso3166Alpha3CountryCode("KR");
        KWT = new Iso3166Alpha3CountryCode("KW");
        KGZ = new Iso3166Alpha3CountryCode("KG");
        LAO = new Iso3166Alpha3CountryCode("LA");
        LVA = new Iso3166Alpha3CountryCode("LV");
        LBN = new Iso3166Alpha3CountryCode("LB");
        LSO = new Iso3166Alpha3CountryCode("LS");
        LBR = new Iso3166Alpha3CountryCode("LR");
        LBY = new Iso3166Alpha3CountryCode("LY");
        LIE = new Iso3166Alpha3CountryCode("LI");
        LTU = new Iso3166Alpha3CountryCode("LT");
        LUX = new Iso3166Alpha3CountryCode("LU");
        MAC = new Iso3166Alpha3CountryCode("MO");
        MKD = new Iso3166Alpha3CountryCode("MK");
        MDG = new Iso3166Alpha3CountryCode("MG");
        MWI = new Iso3166Alpha3CountryCode("MW");
        MYS = new Iso3166Alpha3CountryCode("MY");
        MDV = new Iso3166Alpha3CountryCode("MV");
        MLI = new Iso3166Alpha3CountryCode("ML");
        MLT = new Iso3166Alpha3CountryCode("MT");
        MHL = new Iso3166Alpha3CountryCode("MH");
        MTQ = new Iso3166Alpha3CountryCode("MQ");
        MRT = new Iso3166Alpha3CountryCode("MR");
        MUS = new Iso3166Alpha3CountryCode("MU");
        MYT = new Iso3166Alpha3CountryCode("YT");
        MEX = new Iso3166Alpha3CountryCode("MX");
        FSM = new Iso3166Alpha3CountryCode("FM");
        MDA = new Iso3166Alpha3CountryCode("MD");
        MCO = new Iso3166Alpha3CountryCode("MC");
        MNG = new Iso3166Alpha3CountryCode("MN");
        MNE = new Iso3166Alpha3CountryCode("ME");
        MSR = new Iso3166Alpha3CountryCode("MS");
        MAR = new Iso3166Alpha3CountryCode("MA");
        MOZ = new Iso3166Alpha3CountryCode("MZ");
        MMR = new Iso3166Alpha3CountryCode("MM");
        NAM = new Iso3166Alpha3CountryCode("NA");
        NRU = new Iso3166Alpha3CountryCode("NR");
        NPL = new Iso3166Alpha3CountryCode("NP");
        NLD = new Iso3166Alpha3CountryCode("NL");
        NCL = new Iso3166Alpha3CountryCode("NC");
        NZL = new Iso3166Alpha3CountryCode("NZ");
        NIC = new Iso3166Alpha3CountryCode("NI");
        NER = new Iso3166Alpha3CountryCode("NE");
        NGA = new Iso3166Alpha3CountryCode("NG");
        NIU = new Iso3166Alpha3CountryCode("NU");
        NFK = new Iso3166Alpha3CountryCode("NF");
        MNP = new Iso3166Alpha3CountryCode("MP");
        NOR = new Iso3166Alpha3CountryCode("NO");
        OMN = new Iso3166Alpha3CountryCode("OM");
        PAK = new Iso3166Alpha3CountryCode("PK");
        PLW = new Iso3166Alpha3CountryCode("PW");
        PSE = new Iso3166Alpha3CountryCode("PS");
        PAN = new Iso3166Alpha3CountryCode("PA");
        PNG = new Iso3166Alpha3CountryCode("PG");
        PRY = new Iso3166Alpha3CountryCode("PY");
        PER = new Iso3166Alpha3CountryCode("PE");
        PHL = new Iso3166Alpha3CountryCode("PH");
        PCN = new Iso3166Alpha3CountryCode("PN");
        POL = new Iso3166Alpha3CountryCode("PL");
        PRT = new Iso3166Alpha3CountryCode("PT");
        PRI = new Iso3166Alpha3CountryCode("PR");
        QAT = new Iso3166Alpha3CountryCode("QA");
        REU = new Iso3166Alpha3CountryCode("RE");
        ROU = new Iso3166Alpha3CountryCode("RO");
        RUS = new Iso3166Alpha3CountryCode("RU");
        RWA = new Iso3166Alpha3CountryCode("RW");
        BLM = new Iso3166Alpha3CountryCode("BL");
        SHN = new Iso3166Alpha3CountryCode("SH");
        KNA = new Iso3166Alpha3CountryCode("KN");
        LCA = new Iso3166Alpha3CountryCode("LC");
        MAF = new Iso3166Alpha3CountryCode("MF");
        SPM = new Iso3166Alpha3CountryCode("PM");
        VCT = new Iso3166Alpha3CountryCode("VC");
        WSM = new Iso3166Alpha3CountryCode("WS");
        SMR = new Iso3166Alpha3CountryCode("SM");
        STP = new Iso3166Alpha3CountryCode("ST");
        SAU = new Iso3166Alpha3CountryCode("SA");
        SEN = new Iso3166Alpha3CountryCode("SN");
        SRB = new Iso3166Alpha3CountryCode("RS");
        SYC = new Iso3166Alpha3CountryCode("SC");
        SLE = new Iso3166Alpha3CountryCode("SL");
        SGP = new Iso3166Alpha3CountryCode("SG");
        SXM = new Iso3166Alpha3CountryCode("SX");
        SVK = new Iso3166Alpha3CountryCode("SK");
        SVN = new Iso3166Alpha3CountryCode("SI");
        SLB = new Iso3166Alpha3CountryCode("SB");
        SOM = new Iso3166Alpha3CountryCode("SO");
        ZAF = new Iso3166Alpha3CountryCode("ZA");
        SGS = new Iso3166Alpha3CountryCode("GS");
        SSD = new Iso3166Alpha3CountryCode("SS");
        ESP = new Iso3166Alpha3CountryCode("ES");
        LKA = new Iso3166Alpha3CountryCode("LK");
        SDN = new Iso3166Alpha3CountryCode("SD");
        SUR = new Iso3166Alpha3CountryCode("SR");
        SJM = new Iso3166Alpha3CountryCode("SJ");
        SWZ = new Iso3166Alpha3CountryCode("SZ");
        SWE = new Iso3166Alpha3CountryCode("SE");
        CHE = new Iso3166Alpha3CountryCode("CH");
        SYR = new Iso3166Alpha3CountryCode("SY");
        TWN = new Iso3166Alpha3CountryCode("TW");
        TJK = new Iso3166Alpha3CountryCode("TJ");
        TZA = new Iso3166Alpha3CountryCode("TZ");
        THA = new Iso3166Alpha3CountryCode("TH");
        TLS = new Iso3166Alpha3CountryCode("TL");
        TGO = new Iso3166Alpha3CountryCode("TG");
        TKL = new Iso3166Alpha3CountryCode("TK");
        TON = new Iso3166Alpha3CountryCode("TO");
        TTO = new Iso3166Alpha3CountryCode("TT");
        TUN = new Iso3166Alpha3CountryCode("TN");
        TUR = new Iso3166Alpha3CountryCode("TR");
        TKM = new Iso3166Alpha3CountryCode("TM");
        TCA = new Iso3166Alpha3CountryCode("TC");
        TUV = new Iso3166Alpha3CountryCode("TV");
        UGA = new Iso3166Alpha3CountryCode("UG");
        UKR = new Iso3166Alpha3CountryCode("UA");
        ARE = new Iso3166Alpha3CountryCode("AE");
        GBR = new Iso3166Alpha3CountryCode("GB");
        USA = new Iso3166Alpha3CountryCode("US");
        UMI = new Iso3166Alpha3CountryCode("UM");
        URY = new Iso3166Alpha3CountryCode("UY");
        UZB = new Iso3166Alpha3CountryCode("UZ");
        VUT = new Iso3166Alpha3CountryCode("VU");
        VEN = new Iso3166Alpha3CountryCode("VE");
        VNM = new Iso3166Alpha3CountryCode("VN");
        VGB = new Iso3166Alpha3CountryCode("VG");
        VIR = new Iso3166Alpha3CountryCode("VI");
        WLF = new Iso3166Alpha3CountryCode("WF");
        ESH = new Iso3166Alpha3CountryCode("EH");
        YEM = new Iso3166Alpha3CountryCode("YE");
        ZMB = new Iso3166Alpha3CountryCode("ZM");
        ZWE = new Iso3166Alpha3CountryCode("ZW");
        Iso3166Alpha3CountryCode[] arriso3166Alpha3CountryCode = new Iso3166Alpha3CountryCode[]{AFG, ALA, ALB, DZA, ASM, AND, AGO, AIA, ATA, ATG, ARG, ARM, ABW, AUS, AUT, AZE, BHS, BHR, BGD, BRB, BLR, BEL, BLZ, BEN, BMU, BTN, BOL, BES, BIH, BWA, BVT, BRA, IOT, BRN, BGR, BFA, BDI, KHM, CMR, CAN, CPV, CYM, CAF, TCD, CHL, CHN, CXR, CCK, COL, COM, COG, COD, COK, CRI, CIV, HRV, CUB, CUW, CYP, CZE, DNK, DJI, DMA, DOM, ECU, EGY, SLV, GNQ, ERI, EST, ETH, FLK, FRO, FJI, FIN, FRA, GUF, PYF, ATF, GAB, GMB, GEO, DEU, GHA, GIB, GRC, GRL, GRD, GLP, GUM, GTM, GGY, GIN, GNB, GUY, HTI, HMD, VAT, HND, HKG, HUN, ISL, IND, IDN, IRN, IRQ, IRL, IMN, ISR, ITA, JAM, JPN, JEY, JOR, KAZ, KEN, KIR, PRK, KOR, KWT, KGZ, LAO, LVA, LBN, LSO, LBR, LBY, LIE, LTU, LUX, MAC, MKD, MDG, MWI, MYS, MDV, MLI, MLT, MHL, MTQ, MRT, MUS, MYT, MEX, FSM, MDA, MCO, MNG, MNE, MSR, MAR, MOZ, MMR, NAM, NRU, NPL, NLD, NCL, NZL, NIC, NER, NGA, NIU, NFK, MNP, NOR, OMN, PAK, PLW, PSE, PAN, PNG, PRY, PER, PHL, PCN, POL, PRT, PRI, QAT, REU, ROU, RUS, RWA, BLM, SHN, KNA, LCA, MAF, SPM, VCT, WSM, SMR, STP, SAU, SEN, SRB, SYC, SLE, SGP, SXM, SVK, SVN, SLB, SOM, ZAF, SGS, SSD, ESP, LKA, SDN, SUR, SJM, SWZ, SWE, CHE, SYR, TWN, TJK, TZA, THA, TLS, TGO, TKL, TON, TTO, TUN, TUR, TKM, TCA, TUV, UGA, UKR, ARE, GBR, USA, UMI, URY, UZB, VUT, VEN, VNM, VGB, VIR, WLF, ESH, YEM, ZMB, ZWE};
        $VALUES = arriso3166Alpha3CountryCode;
        mIso3166ConverterMap = new HashMap();
        for (Iso3166Alpha3CountryCode iso3166Alpha3CountryCode : Iso3166Alpha3CountryCode.values()) {
            mIso3166ConverterMap.put((Object)iso3166Alpha3CountryCode.getAlpha2(), (Object)iso3166Alpha3CountryCode);
        }
    }

    private Iso3166Alpha3CountryCode(String string2) {
        this.alpha2 = string2;
    }

    private String getAlpha2() {
        return this.alpha2;
    }

    public static Iso3166Alpha3CountryCode getAlpha3Code(String string) {
        return (Iso3166Alpha3CountryCode)((Object)mIso3166ConverterMap.get((Object)string));
    }

    public static Iso3166Alpha3CountryCode valueOf(String string) {
        return (Iso3166Alpha3CountryCode)Enum.valueOf(Iso3166Alpha3CountryCode.class, (String)string);
    }

    public static Iso3166Alpha3CountryCode[] values() {
        return (Iso3166Alpha3CountryCode[])$VALUES.clone();
    }
}

